[{"template-id":"external-service-interaction","template-path":"/Users/naimaouaichia/nuclei-templates/http/miscellaneous/external-service-interaction.yaml","template-encoded":"aWQ6IGV4dGVybmFsLXNlcnZpY2UtaW50ZXJhY3Rpb24KCmluZm86CiAgbmFtZTogRXh0ZXJuYWwgU2VydmljZSBJbnRlcmFjdGlvbgogIGF1dGhvcjogYW5kcmVsdW5hCiAgc2V2ZXJpdHk6IGluZm8KICBkZXNjcmlwdGlvbjogRXh0ZXJuYWwgU2VydmljZSBpbnRlcmFjdGlvbiB2aWEgSG9zdCBIZWFkZXIgSW5qZWN0aW9uLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQva2IvaXNzdWVzLzAwMzAwMjEwX2V4dGVybmFsLXNlcnZpY2UtaW50ZXJhY3Rpb24taHR0cAogICAgLSBodHRwczovL3N1Y2Nlc3MucXVhbHlzLmNvbS9zdXBwb3J0L3MvYXJ0aWNsZS8wMDAwMDY4NDMKICAgIC0gaHR0cHM6Ly9vd2FzcC5vcmcvd3d3LXByb2plY3Qtd2ViLXNlY3VyaXR5LXRlc3RpbmctZ3VpZGUvbGF0ZXN0LzQtV2ViX0FwcGxpY2F0aW9uX1NlY3VyaXR5X1Rlc3RpbmcvMDctSW5wdXRfVmFsaWRhdGlvbl9UZXN0aW5nLzE3LVRlc3RpbmdfZm9yX0hvc3RfSGVhZGVyX0luamVjdGlvbgogIGNsYXNzaWZpY2F0aW9uOgogICAgY3dlLWlkOiBDV0UtOTE4LENXRS00MDYKICBtZXRhZGF0YToKICAgIG1heC1yZXF1ZXN0OiAxCiAgdGFnczogbWlzY2VsbGFuZW91cyxodHRwLG1pc2Msb2FzdCx2dWxuCgpodHRwOgogIC0gcmF3OgogICAgICAtIHwKICAgICAgICBHRVQgLyBIVFRQLzEuMQogICAgICAgIEhvc3Q6IHt7aW50ZXJhY3RzaC11cmx9fQoKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IHdvcmQKICAgICAgICBwYXJ0OiBpbnRlcmFjdHNoX3Byb3RvY29sCiAgICAgICAgd29yZHM6CiAgICAgICAgICAtICJodHRwIgogICAgICAgICAgLSAiZG5zIgogICAgICAgIGNvbmRpdGlvbjogb3IKIyBkaWdlc3Q6IDRiMGEwMDQ4MzA0NjAyMjEwMDhkMGJkYTNiZjZhZTU2MjFlZDZlMTMwODMxODIzYmRhYjFkZWNkYTE1YTgyMjc2NjhkYmI2YzVkYmQ5ZGJkY2MwMjIxMDBhZWU5Y2MwNmNmNjhjZGYxZjMyYjgwYzRiMTgzNzU1M2UxNjI5OGEzNzQwNDJhOTVhZDIyNjI0ZTcxNmUxMDFlOjkyMmM2NDU5MDIyMjc5OGJiNzYxZDViNmQ4ZTcyOTUw","info":{"name":"External Service Interaction","author":["andreluna"],"tags":["miscellaneous","http","misc","oast","vuln"],"description":"External Service interaction via Host Header Injection.","reference":["https://portswigger.net/kb/issues/00300210_external-service-interaction-http","https://success.qualys.com/support/s/article/000006843","https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/17-Testing_for_Host_Header_Injection"],"severity":"info","metadata":{"max-request":1},"classification":{"cve-id":null,"cwe-id":["cwe-918","cwe-406"]}},"type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: d40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun\r\nUser-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0\r\nConnection: close\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:11:55 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","timestamp":"2025-10-28T12:11:57.357061+01:00","interaction":{"protocol":"dns","unique-id":"d40a9n901b7p8cfhsa50mbmmou84o3x3c","full-id":"d40a9n901b7p8cfhsa50mbmmou84o3x3c","q-type":"A","raw-request":";; opcode: QUERY, status: NOERROR, id: 46424\n;; flags:; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags: do; udp: 1452\n\n;; QUESTION SECTION:\n;d40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun.\tIN\t A\n","raw-response":";; opcode: QUERY, status: NOERROR, id: 46424\n;; flags: qr aa; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 2\n\n;; QUESTION SECTION:\n;d40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun.\tIN\t A\n\n;; ANSWER SECTION:\nd40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun.\t3600\tIN\tA\t206.189.156.69\n\n;; AUTHORITY SECTION:\nd40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun.\t3600\tIN\tNS\tns1.oast.fun.\nd40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun.\t3600\tIN\tNS\tns2.oast.fun.\n\n;; ADDITIONAL SECTION:\nns1.oast.fun.\t3600\tIN\tA\t206.189.156.69\nns2.oast.fun.\t3600\tIN\tA\t206.189.156.69\n","remote-address":"172.71.133.56","timestamp":"2025-10-28T11:11:55.711062291Z"},"curl-command":"curl -X 'GET' -d '' -H 'Host: d40a9n901b7p8cfhsa50mbmmou84o3x3c.oast.fun' -H 'User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0' 'http://localhost:3000/'","matcher-status":true},{"template-id":"node-express-dev-env","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/node-express-dev-env.yaml","template-encoded":"aWQ6IG5vZGUtZXhwcmVzcy1kZXYtZW52CgppbmZvOgogIG5hbWU6IE5vZGUuanMgRXhwcmVzcyBOT0RFX0VOViBEZXZlbG9wbWVudCBNb2RlCiAgYXV0aG9yOiBGTFgKICBzZXZlcml0eTogbWVkaXVtCiAgZGVzY3JpcHRpb246IHwKICAgIFRoZSBOb2RlLmpzIGFwcGxpY2F0aW9uIHJ1bnMgaW4gZGV2ZWxvcG1lbnQgbW9kZSwgd2hpY2ggY2FuIGV4cG9zZSBzZW5zaXRpdmUgaW5mb3JtYXRpb24sIHN1Y2ggYXMgc291cmNlIGNvZGUgYW5kIHNlY3JldHMsIGRlcGVuZGluZyBvbiB0aGUgYXBwbGljYXRpb24uCiAgcmVmZXJlbmNlOgogICAgLSBodHRwczovL3d3dy5pbnZpY3RpLmNvbS93ZWItdnVsbmVyYWJpbGl0eS1zY2FubmVyL3Z1bG5lcmFiaWxpdGllcy9leHByZXNzLWRldmVsb3BtZW50LW1vZGUtaXMtZW5hYmxlZC8KICAgIC0gaHR0cHM6Ly93d3cuc3lub3BzeXMuY29tL2Jsb2dzL3NvZnR3YXJlLXNlY3VyaXR5L25vZGVqcy1tZWFuLXN0YWNrLXZ1bG5lcmFiaWxpdGllcy5odG1sCiAgbWV0YWRhdGE6CiAgICB2ZXJpZmllZDogdHJ1ZQogICAgbWF4LXJlcXVlc3Q6IDIKICAgIHNob2Rhbi1xdWVyeTogIlgtUG93ZXJlZC1CeTogRXhwcmVzcyIKICB0YWdzOiBub2RlanMsZXhwcmVzcyxtaXNjb25maWcsZGV2b3BzLGNpY2QsdHJhY2UsdnVsbgpmbG93OiBodHRwKDEpICYmIGh0dHAoMikKCmh0dHA6CiAgLSBtZXRob2Q6IEdFVAogICAgcGF0aDoKICAgICAgLSAie3tCYXNlVVJMfX0iCgogICAgbWF0Y2hlcnM6CiAgICAgIC0gdHlwZTogZHNsCiAgICAgICAgaW50ZXJuYWw6IHRydWUKICAgICAgICBkc2w6CiAgICAgICAgICAtICJjb250YWlucyh0b2xvd2VyKGFsbF9oZWFkZXJzKSwgJ3gtcG93ZXJlZC1ieTogZXhwcmVzcycpIgoKICAtIHJhdzoKICAgICAgLSB8CiAgICAgICAgR0VUIC8gSFRUUC8xLjEKICAgICAgICBIb3N0OiB7e0hvc3RuYW1lfX0KICAgICAgICBDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24KICAgICAgICBDb25uZWN0aW9uOiBjbG9zZQoKICAgICAgICB0CgogICAgbWF0Y2hlcnM6CiAgICAgIC0gdHlwZTogZHNsCiAgICAgICAgZHNsOgogICAgICAgICAgLSAic3RhdHVzX2NvZGU9PTQwMCIKICAgICAgICAgIC0gImNvbnRhaW5zKGJvZHksICdTeW50YXhFcnJvcjogVW5leHBlY3RlZCB0b2tlbicpIgogICAgICAgICAgLSAiY29udGFpbnModG9sb3dlcihhbGxfaGVhZGVycyksICd4LXBvd2VyZWQtYnk6IGV4cHJlc3MnKSIKICAgICAgICBjb25kaXRpb246IGFuZAojIGRpZ2VzdDogNDkwYTAwNDYzMDQ0MDIyMDRmM2RkZjQwNTYwOTQxZTE3NGQ0MDBkZjA3ZDBiYjQ4MWNiNWVjMGU5NDdiZTY1NTA1ZWVkMTMzODIyZGNjNzYwMjIwNTY0YjlkNzI2OTA3MmI1MmY4OTA4N2EzMDNlMTJhMmJhOGJhNzBjYmRjMzNkZDU1OTJkMGUwY2M4ZDg0MDgyYjo5MjJjNjQ1OTAyMjI3OThiYjc2MWQ1YjZkOGU3Mjk1MA==","info":{"name":"Node.js Express NODE_ENV Development Mode","author":["flx"],"tags":["nodejs","express","misconfig","devops","cicd","trace","vuln"],"description":"The Node.js application runs in development mode, which can expose sensitive information, such as source code and secrets, depending on the application.\n","reference":["https://www.invicti.com/web-vulnerability-scanner/vulnerabilities/express-development-mode-is-enabled/","https://www.synopsys.com/blogs/software-security/nodejs-mean-stack-vulnerabilities.html"],"severity":"medium","metadata":{"max-request":2,"shodan-query":"X-Powered-By: Express","verified":true}},"type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (ZZ; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nContent-Length: 1\r\nConnection: close\r\nContent-Type: application/json\r\nAccept-Encoding: gzip\r\n\r\nt","response":"HTTP/1.1 400 Bad Request\r\nConnection: close\r\nContent-Length: 999\r\nContent-Security-Policy: default-src 'none'\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 28 Oct 2025 11:12:00 GMT\r\nX-Content-Type-Options: nosniff\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u003chead\u003e\n\u003cmeta charset=\"utf-8\"\u003e\n\u003ctitle\u003eError\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cpre\u003eSyntaxError: Unexpected token \u0026#39;t\u0026#39;, \u0026quot;t\u0026quot; is not valid JSON\u003cbr\u003e \u0026nbsp; \u0026nbsp;at JSON.parse (\u0026lt;anonymous\u0026gt;)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at createStrictSyntaxError (/usr/src/app/node_modules/body-parser/lib/types/json.js:169:10)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at parse (/usr/src/app/node_modules/body-parser/lib/types/json.js:86:15)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at /usr/src/app/node_modules/body-parser/lib/read.js:128:18\u003cbr\u003e \u0026nbsp; \u0026nbsp;at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at invokeCallback (/usr/src/app/node_modules/raw-body/index.js:238:16)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at done (/usr/src/app/node_modules/raw-body/index.js:227:7)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at IncomingMessage.onEnd (/usr/src/app/node_modules/raw-body/index.js:287:7)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at IncomingMessage.emit (node:events:524:28)\u003cbr\u003e \u0026nbsp; \u0026nbsp;at endReadableNT (node:internal/streams/readable:1698:12)\u003c/pre\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:00.48879+01:00","curl-command":"curl -X 'GET' -d 't' -H 'Connection: close' -H 'Content-Type: application/json' -H 'Host: localhost:3000' -H 'User-Agent: Mozilla/5.0 (ZZ; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"snmpv3-detect","template-path":"/Users/naimaouaichia/nuclei-templates/javascript/udp/detection/snmpv3-detect.yaml","info":{"name":"SNMPv3 Fingerprint - Detect","author":["matejsmycka"],"tags":["js","udp","network","snmp"],"description":"SNMPv3 can leak information about the device even without proper authentication.Use `nmap -sU \u003cADDRESS\u003e -p 161 --script snmp-info` to get more information.Engine IDs can help to determine one device with multiple interfaces.\n","reference":["https://support.huawei.com/enterprise/en/doc/EDOC1100174721/46bd64e2/snmpv3","https://pure.tudelft.nl/ws/portalfiles/portal/103172599/3487552.3487848.pdf","https://svn.nmap.org/nmap/nselib/data/enterprise_numbers.txt","http://docs.logmatrix.com/nervecenter/guides/NC-SNMPv3-EngineIDs.pdf"],"severity":"info","metadata":{"max-request":1,"shodan-query":"product:\"SNMP\"","verified":true}},"type":"javascript","host":"localhost:3000","port":"3000","url":"http://localhost:3000/","matched-at":"localhost:3000","extracted-results":["Enterprise: unknown"],"request":"const c = require(\"nuclei/net\");\nconst b = require('nuclei/bytes');\n\nconst conn = c.Open('udp', `${Host}:${Port}`, `${Timeout}`);\n// SNMPv3: F=r U=\"\" E= C=\"\" GetRequest(12)\nlet payload = \"303a020103300f02024a69020300ffe30401040201030410300e0400020100020100040004000400301204000400a00c020237f00201000201003000\";\nconn.SendHex(payload);\nlet resp = conn.RecvFull(128);\nconst hexBuffer = new b.Buffer();\nhexBuffer.Write(resp);\nconst respHex = hexBuffer.Hex()\n\n\nconst known_vendors = {\n    \"80000009\": \"Cisco\",\n    \"80003a8c\": \"MikroTik\",\n    \"800007db\": \"Huawei\",\n    \"8000040e\": \"SageCom SAS\",\n    \"80001f88\": \"net-snmp\",\n    \"80000B2f\": \"Thomson Inc\",\n    \"8000113d\": \"Broadcom Corporation\",\n    \"8000124c\": \"Ambit Microsystems Corporation\",\n    \"800011ae\": \"Netgear\",\n    \"800063a2\": \"H3C\",\n    \"8000130a\": \"Juniper Networks, Inc.\",\n    \"80003044\": \"Fortinet Inc\",\n}\n\nfunction getVendor(msgHex) {\n    for (const [key, value] of Object.entries(known_vendors)) {\n        if (msgHex.includes(key)) {\n            msgHex = (typeof msgHex === \"string\") ? msgHex : (msgHex ? String(msgHex) : \"\");\n            if (!msgHex) return \"Unknown\";\n\n            if (msgHex.toLowerCase().includes(key.toLowerCase())) {\n                const m = msgHex.match(/8000([0-9a-fA-F]*?)0201/i);\n                const engineId = m \u0026\u0026 m[1] ? m[1] : null;\n                return value + (engineId ? (\", Engine ID: \" + engineId) : \"\");\n            }\n        }\n    }\n    const m = msgHex.match(/8000[0-9a-fA-F]*?0201/);\n    return \"Enterprise: \" + (m ? m[0] : \"unknown\");\n}\ngetVendor(respHex);","response":"Enterprise: unknown","timestamp":"2025-10-28T12:12:22.708741+01:00","matcher-status":true},{"template-id":"exposed-file-upload-form","template-path":"/Users/naimaouaichia/nuclei-templates/http/miscellaneous/exposed-file-upload-form.yaml","template-encoded":"aWQ6IENWRS0yMDE4LTEwMDg4CgppbmZvOgogIG5hbWU6IFhpb25nTWFpIHVjLWh0dHBkIDEuMC4wIC0gQnVmZmVyIE92ZXJmbG93CiAgYXV0aG9yOiAweF9Ba29rbwogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBCdWZmZXIgb3ZlcmZsb3cgaW4gWGlvbmdNYWkgdWMtaHR0cGQgMS4wLjAgaGFzIHVuc3BlY2lmaWVkIGltcGFjdCBhbmQgYXR0YWNrIHZlY3RvcnMsIGEgZGlmZmVyZW50IHZ1bG5lcmFiaWxpdHkgdGhhbiBDVkUtMjAxNy0xNjcyNS4KICBpbXBhY3Q6IHwKICAgIFBvdGVudGlhbCBmb3IgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIG9yIGRlbmlhbCBvZiBzZXJ2aWNlIHdoZW4gc3VjY2Vzc2Z1bGx5IGV4cGxvaXRlZC4KICByZW1lZGlhdGlvbjogfAogICAgVXBkYXRlIHRvIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiB1Yy1odHRwZCBvciBhcHBseSBzZWN1cml0eSBwYXRjaGVzIHByb3ZpZGVkIGJ5IHRoZSB2ZW5kb3IuCiAgcmVmZXJlbmNlOgogICAgLSBodHRwczovL252ZC5uaXN0Lmdvdi92dWxuL2RldGFpbC9DVkUtMjAxOC0xMDA4OAogICAgLSBodHRwczovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy80NDg2NAogICAgLSBodHRwczovL2dpdGh1Yi5jb20vYml0ZnUvdWMtaHR0cGQtMS4wLjAtYnVmZmVyLW92ZXJmbG93LWV4cGxvaXQKICAgIC0gaHR0cHM6Ly9naXRodWIuY29tL0tvc3Rhc0VyZWtzb25hcy9CZXNkZXItNjAyNFBCLVhNQTUwMS1pcC1jYW1lcmEtc2VjdXJpdHktaW52ZXN0aWdhdGlvbgogIGNsYXNzaWZpY2F0aW9uOgogICAgY3Zzcy1tZXRyaWNzOiBDVlNTOjMuMC9BVjpOL0FDOkwvUFI6Ti9VSTpOL1M6VS9DOkgvSTpIL0E6SAogICAgY3Zzcy1zY29yZTogOS44CiAgICBjdmUtaWQ6IENWRS0yMDE4LTEwMDg4CiAgICBjd2UtaWQ6IENXRS0xMTkKICAgIGVwc3Mtc2NvcmU6IDAuNzY4MDcKICAgIGVwc3MtcGVyY2VudGlsZTogMC45ODg5NQogICAgY3BlOiBjcGU6Mi4zOmE6eGlvbmdtYWl0ZWNoOnVjLWh0dHBkOjEuMC4wOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICBtYXgtcmVxdWVzdDogMQogICAgdmVuZG9yOiB4aW9uZ21haXRlY2gKICAgIHByb2R1Y3Q6IHVjLWh0dHBkCiAgICBzaG9kYW4tcXVlcnk6IGNwZToiY3BlOjIuMzphOnhpb25nbWFpdGVjaDp1Yy1odHRwZCIKICB0YWdzOiBjdmUsY3ZlMjAxOCx4aW9uZ21haSxidWZmZXItb3ZlcmZsb3cscmNlLHBhc3NpdmUsdmtldix2dWxuCgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbnRhaW5zKHRvbG93ZXIoaGVhZGVyKSwgJ3VjLWh0dHBkJykiCiAgICAgICAgICAtICJjb21wYXJlX3ZlcnNpb25zKHZlcnNpb24sICc8PSAxLjAuMCcpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICBwYXJ0OiBoZWFkZXIKICAgICAgICBncm91cDogMQogICAgICAgIHJlZ2V4OgogICAgICAgICAgLSAnKD9pKVNlcnZlcjpccyp1Yy1odHRwZFsvXHNdKyhbMC05XStcLlswLTldK1wuWzAtOV0rKScKICAgICAgICBpbnRlcm5hbDogdHJ1ZQoKICAgICAgLSB0eXBlOiBkc2wKICAgICAgICBkc2w6CiAgICAgICAgICAtICd2ZXJzaW9uJwojIGRpZ2VzdDogNGIwYTAwNDgzMDQ2MDIyMTAwYTc5ZDRkZTRmM2E4YTMwNzNmNzYxZWUyODRhYzhkY2EwZjcyZmI3OGUwZmQ2NTg3Y2ViNjJjYTJhOGQzNzc2ZjAyMjEwMGJiNmFhZGRkNjhmNTZmYTAzZWE5ZWUzY2JlOTY5NGFjYzJhMTBmYzFiN2RkOTQwZDVhYzIxMmZlMDBmZDRhYWI6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"Exposed File Upload Form","author":["geeknik"],"tags":["miscellaneous","exposure","upload","form","misc","generic","vuln"],"severity":"info","metadata":{"max-request":1,"product":"creativedream_file_uploader","shodan-query":"http.html:\"multipart/form-data\" html:\"file\"","vendor":"creativedream_file_uploader_project","verified":true},"classification":{"cve-id":null,"cwe-id":null,"cpe":"cpe:2.3:a:creativedream_file_uploader_project:creativedream_file_uploader:*:*:*:*:*:*:*:*"}},"type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Mac OS X 13_2) AppleWebKit/537.36 (KHTML, like Gecko) Safari/128.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:39 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:39.510124+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Mac OS X 13_2) AppleWebKit/537.36 (KHTML, like Gecko) Safari/128.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"form-detection","template-path":"/Users/naimaouaichia/nuclei-templates/http/miscellaneous/form-detection.yaml","template-encoded":"aWQ6IG5vcmRleC13aW5kLWZhcm0tcG9ydGFsCgppbmZvOgogIG5hbWU6IE5vcmRleCBDb250cm9sIFdpbmQgRmFybSBQb3J0YWwgTG9naW4gUGFuZWwgLSBEZXRlY3QKICBhdXRob3I6IGdlZWtuaWsKICBzZXZlcml0eTogaW5mbwogIGRlc2NyaXB0aW9uOiBOb3JkZXggQ29udHJvbCBXaW5kIEZhcm0gUG9ydGFsIGxvZ2luIHBhbmVsIHdhcyBkZXRlY3RlZC4KICByZWZlcmVuY2U6CiAgICAtIGh0dHBzOi8vd3d3Lm5vcmRleC1vbmxpbmUuY29tL2VuLwogIGNsYXNzaWZpY2F0aW9uOgogICAgY3Zzcy1tZXRyaWNzOiBDVlNTOjMuMC9BVjpOL0FDOkwvUFI6Ti9VSTpOL1M6VS9DOk4vSTpOL0E6TgogICAgY3dlLWlkOiBDV0UtMjAwCiAgbWV0YWRhdGE6CiAgICB2ZXJpZmllZDogdHJ1ZQogICAgbWF4LXJlcXVlc3Q6IDEKICAgIHNob2Rhbi1xdWVyeTogaHR0cC5odG1sOiJOb3JkZXggQ29udHJvbCIKICB0YWdzOiBwYW5lbCxub3JkZXgsaW90LGRpc2NvdmVyeQoKaHR0cDoKICAtIG1ldGhvZDogR0VUCiAgICBwYXRoOgogICAgICAtICJ7e0Jhc2VVUkx9fSIKCiAgICByZWRpcmVjdHM6IHRydWUKICAgIG1heC1yZWRpcmVjdHM6IDIKCiAgICBtYXRjaGVycy1jb25kaXRpb246IGFuZAogICAgbWF0Y2hlcnM6CiAgICAgIC0gdHlwZTogd29yZAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICB3b3JkczoKICAgICAgICAgIC0gIjx0aXRsZT5Ob3JkZXggQ29udHJvbCIKICAgICAgICAgIC0gIldpbmQgRmFybSBQb3J0YWwiCiAgICAgICAgY29uZGl0aW9uOiBvcgoKICAgICAgLSB0eXBlOiBzdGF0dXMKICAgICAgICBzdGF0dXM6CiAgICAgICAgICAtIDIwMAojIGRpZ2VzdDogNGEwYTAwNDczMDQ1MDIyMTAwYzE4YTZmNGE4NzIzYTRiNGRhYTg1OTZjZGZlNGNkMmZlZDNhMjVkYTVmODFkOWYxMGQ2NjA5OGRiOTUxMWJjODAyMjA0NjhiZGIxODg5MzY2YTQzNmFhMzI5NWY0M2QwNWFkMDAwZDg2YjBjY2I0ZjFmYmY5NTM5ZWM0YzBiZDRmMDgxOjkyMmM2NDU5MDIyMjc5OGJiNzYxZDViNmQ4ZTcyOTUw","info":{"name":"Form Detection","author":["pdteam"],"tags":["form","misc","miscellaneous","vuln"],"description":"A template to detect HTML Forms in page response.\n","reference":["https://github.com/dirtycoder0124/formcrawler"],"severity":"info","metadata":{"max-request":1}},"type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Safari/605.1.15\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:46 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:46.493094+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.2 Safari/605.1.15' 'http://localhost:3000/'","matcher-status":true},{"template-id":"tech-detect","template-path":"/Users/naimaouaichia/nuclei-templates/http/technologies/tech-detect.yaml","template-encoded":"aWQ6IENWRS0yMDE5LTQ3MTYKCmluZm86CiAgbmFtZTogSUJNIFBsYW5uaW5nIEFuYWx5dGljcyAtIEF1dGhlbnRpY2F0aW9uIEJ5cGFzcyAmIFJlbW90ZSBDb2RlIEV4ZWN1dGlvbiBWZXJzaW9uIERldGVjdGlvbgogIGF1dGhvcjogMHhfQWtva28KICBzZXZlcml0eTogY3JpdGljYWwKICBkZXNjcmlwdGlvbjogfAogICAgSUJNIFBsYW5uaW5nIEFuYWx5dGljcyB2ZXJzaW9ucyAyLjAuMCB0aHJvdWdoIDIuMC44IGFyZSB2dWxuZXJhYmxlIHRvIGEgY29uZmlndXJhdGlvbiBvdmVyd3JpdGUgdGhhdCBhbGxvd3MgYW4gdW5hdXRoZW50aWNhdGVkIHVzZXIgdG8gbG9naW4gYXMgImFkbWluIiwgYW5kIHRoZW4gZXhlY3V0ZSBjb2RlIGFzIHJvb3Qgb3IgU1lTVEVNIHZpYSBUTTEgc2NyaXB0aW5nLgogIGltcGFjdDogfAogICAgQXR0YWNrZXJzIGNhbiBnYWluIGFkbWluIGFjY2VzcyBhbmQgZXhlY3V0ZSBhcmJpdHJhcnkgY29kZSB3aXRoIFNZU1RFTSBwcml2aWxlZ2VzLCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB0aGUgbGF0ZXN0IHZlcnNpb24gb3IgMi4wLjkgb3IgYXBwbHkgdGhlIHNlY3VyaXR5IHBhdGNoZXMgcHJvdmlkZWQgYnkgSUJNLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cHM6Ly93d3cuaWJtLmNvbS9zdXBwb3J0L3BhZ2VzL25vZGUvMTEyNzc4MQogICAgLSBodHRwczovL252ZC5uaXN0Lmdvdi92dWxuL2RldGFpbC9DVkUtMjAxOS00NzE2CiAgICAtIGh0dHA6Ly9wYWNrZXRzdG9ybXNlY3VyaXR5LmNvbS9maWxlcy8xNTY5NTMvSUJNLUNvZ25vcy1UTTEtSUJNLVBsYW5uaW5nLUFuYWx5dGljcy1TZXJ2ZXItQ29uZmlndXJhdGlvbi1PdmVyd3JpdGUtQ29kZS1FeGVjdXRpb24uaHRtbAogIGNsYXNzaWZpY2F0aW9uOgogICAgY3Zzcy1tZXRyaWNzOiBDVlNTOjMuMS9BVjpOL0FDOkwvUFI6Ti9VSTpOL1M6VS9DOkgvSTpIL0E6SAogICAgY3Zzcy1zY29yZTogOS44CiAgICBjdmUtaWQ6IENWRS0yMDE5LTQ3MTYKICAgIGN3ZS1pZDogQ1dFLTk0CiAgICBlcHNzLXNjb3JlOiAwLjkxMzM0CiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk2MzkKICAgIGNwZTogY3BlOjIuMzphOmlibTpwbGFubmluZ19hbmFseXRpY3M6KjoqOio6KjoqOio6KjoqCiAgbWV0YWRhdGE6CiAgICB2ZXJpZmllZDogdHJ1ZQogICAgbWF4LXJlcXVlc3Q6IDEKICAgIHZlbmRvcjogaWJtCiAgICBwcm9kdWN0OiBwbGFubmluZ19hbmFseXRpY3MKICAgIHNob2Rhbi1xdWVyeTogdGl0bGU6IkFyYyBmb3IgVE0xIgogIHRhZ3M6IGN2ZSxjdmUyMDE5LGlibSxwbGFubmluZ19hbmFseXRpY3MscGFzc2l2ZSxrZXYsdmtldgoKaHR0cDoKICAtIG1ldGhvZDogR0VUCiAgICBwYXRoOgogICAgICAtICJ7e0Jhc2VVUkx9fSIKCiAgICBob3N0LXJlZGlyZWN0czogdHJ1ZQogICAgbWF4LXJlZGlyZWN0czogMgoKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gJ2NvbnRhaW5zX2FueShib2R5LCAiSUJNIFBsYW5uaW5nIEFuYWx5dGljcyIsIklCTSBDb2dub3MgVE0xIiknCiAgICAgICAgICAtICJjb21wYXJlX3ZlcnNpb25zKHZlcnNpb24sICc+PSAyLjAuMCcpICYmIGNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzw9IDIuMC44JykiCiAgICAgICAgICAtICdzdGF0dXNfY29kZSA9PSAyMDAnCiAgICAgICAgY29uZGl0aW9uOiBhbmQKCiAgICBleHRyYWN0b3JzOgogICAgICAtIHR5cGU6IHJlZ2V4CiAgICAgICAgcGFydDogYm9keQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICBncm91cDogMQogICAgICAgIHJlZ2V4OgogICAgICAgICAgLSAndmFyIGFwcFZlcnNpb24gPSAiKFswLTkuXSspIjsnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIxMDA5ZWJjMzFkMDVjODkyYzJkNDk3NTIzZGU1MDI4NzMyNTJhMjhjZDZkNDRjMjc4MzYxZTM5NmFhMzZhYTg1ZTZjMDIyMDJlMjMwNzE5YmI2NzE5ZTVhOTMwYWNmOTc2ZWFmZDBmZjZkM2MxZWM1ZTZlODVlMzkzNjQ3YzVhNmM1YWZkMGI6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"Wappalyzer Technology Detection","author":["hakluke","righettod"],"tags":["tech","discovery"],"severity":"info","metadata":{"max-request":1}},"matcher-name":"express","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Debian; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:55 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:55.611734+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Debian; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"x-content-type-options","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504688+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"referrer-policy","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504691+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"cross-origin-opener-policy","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504693+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"cross-origin-resource-policy","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504695+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"strict-transport-security","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504702+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"content-security-policy","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504704+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"permissions-policy","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504705+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"x-frame-options","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504707+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"x-permitted-cross-domain-policies","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504708+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"clear-site-data","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504711+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"http-missing-security-headers","template-path":"/Users/naimaouaichia/nuclei-templates/http/misconfiguration/http-missing-security-headers.yaml","template-encoded":"aWQ6IENWRS0yMDIxLTMyODcKCmluZm86CiAgbmFtZTogWm9obyBNYW5hZ2VFbmdpbmUgT3BNYW5hZ2VyIDwgMTIuNS4zMjkgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRoZWFtYW5yYXdhdAogIHNldmVyaXR5OiBjcml0aWNhbAogIGRlc2NyaXB0aW9uOiB8CiAgICBab2hvIE1hbmFnZUVuZ2luZSBPcE1hbmFnZXIgYmVmb3JlIDEyLjUuMzI5IGNvbnRhaW5zIGEgcmVtb3RlIGNvZGUgZXhlY3V0aW9uIGNhdXNlZCBieSBhIGdlbmVyYWwgYnlwYXNzIGluIHRoZSBkZXNlcmlhbGl6YXRpb24gY2xhc3MsIGxldHRpbmcgdW5hdXRoZW50aWNhdGVkIGF0dGFja2VycyBleGVjdXRlIGFyYml0cmFyeSBjb2RlLCBleHBsb2l0IHJlcXVpcmVzIG5vIGF1dGhlbnRpY2F0aW9uCiAgaW1wYWN0OiB8CiAgICBVbmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXJzIGNhbiBleGVjdXRlIGFyYml0cmFyeSBjb2RlIHJlbW90ZWx5LCBsZWFkaW5nIHRvIGZ1bGwgc3lzdGVtIGNvbXByb21pc2UuCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZGF0ZSB0byB2ZXJzaW9uIDEyLjUuMzI5IG9yIGxhdGVyLgogIHJlZmVyZW5jZToKICAgIC0gaHR0cDovL3BhY2tldHN0b3Jtc2VjdXJpdHkuY29tL2ZpbGVzLzE2NDIzMS9NYW5hZ2VFbmdpbmUtT3BNYW5hZ2VyLVN1bVBEVS1KYXZhLURlc2VyaWFsaXphdGlvbi5odG1sCiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDIxLTMyODcKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjEvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAyMS0zMjg3CiAgICBlcHNzLXNjb3JlOiAwLjg3NDAyCiAgICBlcHNzLXBlcmNlbnRpbGU6IDAuOTk0MTUKICAgIGN3ZS1pZDogQ1dFLTUwMgogICAgY3BlOiBjcGU6Mi4zOmE6em9ob2NvcnA6bWFuYWdlZW5naW5lX29wbWFuYWdlcjoqOio6KjoqOio6KjoqOioKICBtZXRhZGF0YToKICAgIHZlcmlmaWVkOiB0cnVlCiAgICB2ZW5kb3I6IHpvaG9jb3JwCiAgICBwcm9kdWN0OiBtYW5hZ2VlbmdpbmVfb3BtYW5hZ2VyCiAgICBzaG9kYW4tcXVlcnk6CiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gaHR0cC50aXRsZToib3BtYW5hZ2VyIgogICAgZm9mYS1xdWVyeToKICAgICAgLSB0aXRsZT0ib3BtYW5hZ2VyIHBsdXMiCiAgICAgIC0gdGl0bGU9Im9wbWFuYWdlciIKICAgIGdvb2dsZS1xdWVyeToKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIgcGx1cyIKICAgICAgLSBpbnRpdGxlOiJvcG1hbmFnZXIiCiAgdGFnczogY3ZlLGN2ZTIwMjEsZGVzZXJpYWxpemF0aW9uLHJjZSxvcG1hbmFnZXIscGFzc2l2ZSx2a2V2CgpodHRwOgogIC0gbWV0aG9kOiBHRVQKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIGhvc3QtcmVkaXJlY3RzOiB0cnVlCiAgICBtYXgtcmVkaXJlY3RzOiAzCgogICAgbWF0Y2hlcnMtY29uZGl0aW9uOiBhbmQKICAgIG1hdGNoZXJzOgogICAgICAtIHR5cGU6IGRzbAogICAgICAgIGRzbDoKICAgICAgICAgIC0gInN0YXR1c19jb2RlID09IDIwMCIKICAgICAgICAgIC0gImNvbXBhcmVfdmVyc2lvbnModmVyc2lvbiwgJzwgMTI1MzI5JywgJz49IDEyNTAwMCcpIgogICAgICAgICAgLSAiY29udGFpbnMoYm9keSwgJ01hbmFnZUVuZ2luZScpIgogICAgICAgIGNvbmRpdGlvbjogYW5kCgogICAgZXh0cmFjdG9yczoKICAgICAgLSB0eXBlOiByZWdleAogICAgICAgIHBhcnQ6IGJvZHkKICAgICAgICBncm91cDogMQogICAgICAgIG5hbWU6IHZlcnNpb24KICAgICAgICByZWdleDoKICAgICAgICAgIC0gJ2NhY2hlc3RhcnRcLyhbMC05Ll0rKVwvY2FjaGVlbmQnCiMgZGlnZXN0OiA0YTBhMDA0NzMwNDUwMjIwNzQzNDVlODdiZTczODQ2NDIwOTZjZjBlZTIwY2EyMzkyMzEyNWM5OGZhYTAxM2FhMTA0NDgxNzU4YjU5ODQ5ODAyMjEwMGZmOTRkY2JhNTcyMzU1NTc4YTFhNzA2YTliMTliY2ExNWZkZWYwNzdjMDBlOGM0MTU0MWQ2OWMzYmZjYWRhNzg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"HTTP Missing Security Headers","author":["socketz","geeknik","g4l1t0","convisoappsec","kurohost","dawid-czarnecki","forgedhallpass","jub0bs","userdehghani"],"tags":["misconfig","headers","generic","vuln"],"description":"This template searches for missing HTTP security headers. The impact of these missing headers can vary.\n","severity":"info","metadata":{"max-request":1}},"matcher-name":"cross-origin-embedder-policy","type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","request":"GET / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6837\r\nAccept-Ranges: bytes\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nCache-Control: public, max-age=0\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Tue, 28 Oct 2025 11:12:57 GMT\r\nEtag: W/\"1ab5-19a0e23f588\"\r\nLast-Modified: Wed, 22 Oct 2025 22:57:09 GMT\r\nX-Powered-By: Express\r\n\r\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u003chead\u003e\n  \u003cmeta charset=\"UTF-8\"\u003e\n  \u003ctitle\u003eVuln NodeJS Lab - Zeroday Cyber Academy\u003c/title\u003e\n  \u003cstyle\u003e\n    body {\n      background: #0b0b0b;\n      color: #eee;\n      font-family: monospace;\n      margin: 2rem;\n    }\n    h1, h2 {\n      color: #00ff88;\n    }\n    form {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      margin-bottom: 2rem;\n      border-radius: 8px;\n    }\n    input, textarea {\n      width: 100%;\n      margin: 0.3rem 0;\n      padding: 0.3rem;\n      background: #222;\n      border: 1px solid #555;\n      color: #eee;\n    }\n    button {\n      padding: 0.5rem 1rem;\n      background: #00ff88;\n      border: none;\n      cursor: pointer;\n      color: #000;\n      font-weight: bold;\n      border-radius: 4px;\n    }\n    pre {\n      background: #111;\n      border: 1px solid #333;\n      padding: 1rem;\n      border-radius: 8px;\n      color: #0f0;\n      max-height: 300px;\n      overflow: auto;\n    }\n  \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\n  \u003ch1\u003eVulnérable Node.js Server Lab\u003c/h1\u003e\n  \u003cp\u003e⚠️ Environnement volontairement vulnérable — usage éducatif uniquement.\u003c/p\u003e\n\n  \u003chr\u003e\n\n  \u003ch2\u003e1️⃣ SQL Injection (GET /user)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-get\"\u003e\n    \u003cinput type=\"text\" id=\"sqliName\" placeholder=\"Nom de l'utilisateur\"\u003e\n    \u003cbutton type=\"submit\"\u003eRechercher\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-get\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e2️⃣ SQL Injection (POST /data)\u003c/h2\u003e\n  \u003cform id=\"form-sqli-post\"\u003e\n    \u003cinput type=\"text\" id=\"postName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"number\" id=\"postAge\" placeholder=\"Âge\"\u003e\n    \u003cbutton type=\"submit\"\u003eInsérer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-sqli-post\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e3️⃣ XSS Stocké (POST /message)\u003c/h2\u003e\n  \u003cform id=\"form-xss\"\u003e\n    \u003cinput type=\"text\" id=\"author\" placeholder=\"Auteur\"\u003e\n    \u003ctextarea id=\"content\" placeholder=\"Message (HTML autorisé)\"\u003e\u003c/textarea\u003e\n    \u003cbutton type=\"submit\"\u003ePublier\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/messages\" target=\"_blank\"\u003eVoir les messages\u003c/a\u003e\n  \u003cpre id=\"result-xss\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e4️⃣ Upload non sécurisé (POST /upload)\u003c/h2\u003e\n  \u003cform id=\"form-upload\" enctype=\"multipart/form-data\"\u003e\n    \u003cinput type=\"file\" id=\"fileUpload\" name=\"file\"\u003e\n    \u003cbutton type=\"submit\"\u003eUploader\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-upload\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e5️⃣ Command Injection (GET /exec)\u003c/h2\u003e\n  \u003cform id=\"form-exec\"\u003e\n    \u003cinput type=\"text\" id=\"cmd\" placeholder=\"Commande à exécuter (ex: ls)\"\u003e\n    \u003cbutton type=\"submit\"\u003eExécuter\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-exec\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e6️⃣ SSRF (GET /fetch)\u003c/h2\u003e\n  \u003cform id=\"form-ssrf\"\u003e\n    \u003cinput type=\"text\" id=\"url\" placeholder=\"URL cible (ex: https://example.com)\"\u003e\n    \u003cbutton type=\"submit\"\u003eFetch\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ssrf\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e7️⃣ Authentification faible (POST /login)\u003c/h2\u003e\n  \u003cform id=\"form-login\"\u003e\n    \u003cinput type=\"text\" id=\"loginName\" placeholder=\"Nom\"\u003e\n    \u003cinput type=\"password\" id=\"loginPass\" placeholder=\"Mot de passe\"\u003e\n    \u003cbutton type=\"submit\"\u003eConnexion\u003c/button\u003e\n  \u003c/form\u003e\n  \u003ca href=\"/admin\" target=\"_blank\"\u003e→ Accéder à /admin\u003c/a\u003e\n  \u003cpre id=\"result-login\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e8️⃣ Lecture de fichier (GET /readfile)\u003c/h2\u003e\n  \u003cform id=\"form-readfile\"\u003e\n    \u003cinput type=\"text\" id=\"filename\" placeholder=\"Nom du fichier (ex: ../../etc/passwd)\"\u003e\n    \u003cbutton type=\"submit\"\u003eLire\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-readfile\"\u003e\u003c/pre\u003e\n\n  \u003ch2\u003e9️⃣ Ping (POST /ping)\u003c/h2\u003e\n  \u003cform id=\"form-ping\"\u003e\n    \u003cinput type=\"text\" id=\"pingHost\" placeholder=\"Host à ping (ex: 127.0.0.1)\"\u003e\n    \u003cbutton type=\"submit\"\u003eEnvoyer\u003c/button\u003e\n  \u003c/form\u003e\n  \u003cpre id=\"result-ping\"\u003e\u003c/pre\u003e\n\n  \u003chr\u003e\n  \u003cp\u003e\u003ca href=\"/info\" target=\"_blank\"\u003e[GET] /info\u003c/a\u003e — \u003ca href=\"/env\" target=\"_blank\"\u003e[GET] /env\u003c/a\u003e\u003c/p\u003e\n\n  \u003cscript\u003e\n    async function post(url, data) {\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n      });\n      return await res.text();\n    }\n\n    document.getElementById('form-sqli-get').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('sqliName').value;\n      const res = await fetch(`/user?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-sqli-get').textContent = await res.text();\n    };\n\n    document.getElementById('form-sqli-post').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/data', {\n        name: document.getElementById('postName').value,\n        age: document.getElementById('postAge').value\n      });\n      document.getElementById('result-sqli-post').textContent = res;\n    };\n\n    document.getElementById('form-xss').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/message', {\n        author: document.getElementById('author').value,\n        content: document.getElementById('content').value\n      });\n      document.getElementById('result-xss').textContent = res;\n    };\n\n    document.getElementById('form-upload').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const fd = new FormData();\n      fd.append('file', document.getElementById('fileUpload').files[0]);\n      const res = await fetch('/upload', { method: 'POST', body: fd });\n      document.getElementById('result-upload').textContent = await res.text();\n    };\n\n    document.getElementById('form-exec').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const cmd = document.getElementById('cmd').value;\n      const res = await fetch(`/exec?cmd=${encodeURIComponent(cmd)}`);\n      document.getElementById('result-exec').textContent = await res.text();\n    };\n\n    document.getElementById('form-ssrf').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const u = document.getElementById('url').value;\n      const res = await fetch(`/fetch?url=${encodeURIComponent(u)}`);\n      document.getElementById('result-ssrf').textContent = await res.text();\n    };\n\n    document.getElementById('form-login').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/login', {\n        name: document.getElementById('loginName').value,\n        password: document.getElementById('loginPass').value\n      });\n      document.getElementById('result-login').textContent = res;\n    };\n\n    document.getElementById('form-readfile').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const name = document.getElementById('filename').value;\n      const res = await fetch(`/readfile?name=${encodeURIComponent(name)}`);\n      document.getElementById('result-readfile').innerHTML = await res.text();\n    };\n\n    document.getElementById('form-ping').onsubmit = async (e) =\u003e {\n      e.preventDefault();\n      const res = await post('/ping', {\n        host: document.getElementById('pingHost').value\n      });\n      document.getElementById('result-ping').innerHTML = res;\n    };\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:57.504713+01:00","curl-command":"curl -X 'GET' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Fedora; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36' 'http://localhost:3000/'","matcher-status":true},{"template-id":"options-method","template-path":"/Users/naimaouaichia/nuclei-templates/http/miscellaneous/options-method.yaml","template-encoded":"aWQ6IENWRS0yMDE3LTcyNjkKCmluZm86CiAgbmFtZTogV2luZG93cyBTZXJ2ZXIgMjAwMyAmIElJUyA2LjAgLSBSZW1vdGUgQ29kZSBFeGVjdXRpb24KICBhdXRob3I6IHRob21hc19mcm9tX29mZmVuc2l0eSxnZWVrbmlrCiAgc2V2ZXJpdHk6IGNyaXRpY2FsCiAgZGVzY3JpcHRpb246IHwKICAgIEludGVybmV0IEluZm9ybWF0aW9uIFNlcnZpY2VzIChJSVMpIDYuMCBpbiBNaWNyb3NvZnQgV2luZG93cyBTZXJ2ZXIgMjAwMyBSMiBjb250YWlucyBhIGJ1ZmZlciBvdmVyZmxvdyB2dWxuZXJhYmlsaXR5IGluIHRoZSBTY1N0b3JhZ2VQYXRoRnJvbVVybCBmdW5jdGlvbiBpbiB0aGUgV2ViREFWIHNlcnZpY2UgdGhhdCBjb3VsZCBhbGxvdyByZW1vdGUgYXR0YWNrZXJzIHRvIGV4ZWN1dGUgYXJiaXRyYXJ5IGNvZGUgdmlhIGEgbG9uZyBoZWFkZXIgYmVnaW5uaW5nIHdpdGggIklmIDxodHRwOi8vIiBpbiBhIFBST1BGSU5EIHJlcXVlc3QuCiAgaW1wYWN0OiB8CiAgICBBbGxvd3MgcmVtb3RlIGF0dGFja2VycyB0byBleGVjdXRlIGFyYml0cmFyeSBjb2RlIG9uIHRoZSBhZmZlY3RlZCBzeXN0ZW0uCiAgcmVtZWRpYXRpb246IHwKICAgIFVwZ3JhZGUgdG8gYSBzdXBwb3J0ZWQgdmVyc2lvbiBvZiBXaW5kb3dzIFNlcnZlciBhbmQgSUlTLCBvciBhcHBseSB0aGUgbmVjZXNzYXJ5IHNlY3VyaXR5IHBhdGNoZXMuCiAgcmVmZXJlbmNlOgogICAgLSBodHRwczovL2Jsb2cuMHBhdGNoLmNvbS8yMDE3LzAzLzBwYXRjaGluZy1pbW1vcnRhbC1jdmUtMjAxNy03MjY5Lmh0bWwKICAgIC0gaHR0cHM6Ly9naXRodWIuY29tL2RhbmlnYXJndS9leHBsb2RpbmdjYW4vYmxvYi9tYXN0ZXIvZXhwbG9kaW5nY2FuLnB5CiAgICAtIGh0dHBzOi8vbnZkLm5pc3QuZ292L3Z1bG4vZGV0YWlsL0NWRS0yMDE3LTcyNjkKICAgIC0gaHR0cHM6Ly9naXRodWIuY29tL2Vkd2FyZHoyNDYwMDMvSUlTX2V4cGxvaXQKICAgIC0gaHR0cDovL3d3dy5zZWN1cml0eXRyYWNrZXIuY29tL2lkLzEwMzgxNjgKICBjbGFzc2lmaWNhdGlvbjoKICAgIGN2c3MtbWV0cmljczogQ1ZTUzozLjAvQVY6Ti9BQzpML1BSOk4vVUk6Ti9TOlUvQzpIL0k6SC9BOkgKICAgIGN2c3Mtc2NvcmU6IDkuOAogICAgY3ZlLWlkOiBDVkUtMjAxNy03MjY5CiAgICBjd2UtaWQ6IENXRS0xMTkKICAgIGVwc3Mtc2NvcmU6IDAuOTQzNzQKICAgIGVwc3MtcGVyY2VudGlsZTogMC45OTk2MQogICAgY3BlOiBjcGU6Mi4zOmE6bWljcm9zb2Z0OmludGVybmV0X2luZm9ybWF0aW9uX3NlcnZlcjo2LjA6KjoqOio6KjoqOio6KgogIG1ldGFkYXRhOgogICAgbWF4LXJlcXVlc3Q6IDEKICAgIHZlbmRvcjogbWljcm9zb2Z0CiAgICBwcm9kdWN0OiBpbnRlcm5ldF9pbmZvcm1hdGlvbl9zZXJ2ZXIKICAgIHNob2Rhbi1xdWVyeTogY3BlOiJjcGU6Mi4zOmE6bWljcm9zb2Z0OmludGVybmV0X2luZm9ybWF0aW9uX3NlcnZlciIKICB0YWdzOiBjdmUyMDE3LGN2ZSxyY2Usd2luZG93cyxpaXMsa2V2LG1pY3Jvc29mdCx2a2V2LHZ1bG4KCmh0dHA6CiAgLSBtZXRob2Q6IE9QVElPTlMKICAgIHBhdGg6CiAgICAgIC0gInt7QmFzZVVSTH19IgoKICAgIG1hdGNoZXJzLWNvbmRpdGlvbjogYW5kCiAgICBtYXRjaGVyczoKICAgICAgLSB0eXBlOiBkc2wKICAgICAgICBkc2w6CiAgICAgICAgICAtIHJlZ2V4KCI8REFWOnNxbD4iLCBkYXNsKQogICAgICAgICAgLSByZWdleCgiW1xkXSsoLFxzK1tcZF0rKT8iLCBkYXYpCiAgICAgICAgICAtIHJlZ2V4KCIuKj9QUk9QRklORCIsIHB1YmxpYykKICAgICAgICAgIC0gcmVnZXgoIi4qP1BST1BGSU5EIiwgYWxsb3cpCiAgICAgICAgY29uZGl0aW9uOiBvcgoKICAgICAgLSB0eXBlOiB3b3JkCiAgICAgICAgcGFydDogaGVhZGVyCiAgICAgICAgd29yZHM6CiAgICAgICAgICAtICJJSVMvNi4wIgoKICAgICAgLSB0eXBlOiBzdGF0dXMKICAgICAgICBzdGF0dXM6CiAgICAgICAgICAtIDIwMAojIGRpZ2VzdDogNGEwYTAwNDczMDQ1MDIyMDFiZjJiMTQ4NmRlNGUxYTZlYTc1NGYzNGU1ZTEyN2UyOTVlZjg5ZjJjYmZiMzcyMGEzMGRhZDE1OTdhYjBjZmQwMjIxMDBiMDk2OWI5NTBjN2JkZjhlMDE1NjA0ZGI3MmU4ZDk3Nzg1YmYzNDZmODQ1ODFmYjNkMjcwYzhjYmI4ZGJhMzdkOjkyMmM2NDU5MDIyMjc5OGJiNzYxZDViNmQ4ZTcyOTUw","info":{"name":"Allowed Options Method","author":["pdteam"],"tags":["miscellaneous","misc","generic","vuln"],"severity":"info","metadata":{"max-request":1}},"type":"http","host":"localhost:3000","port":"3000","scheme":"http","url":"http://localhost:3000/","path":"/","matched-at":"http://localhost:3000/","extracted-results":["GET,HEAD"],"request":"OPTIONS / HTTP/1.1\r\nHost: localhost:3000\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.1.1 Safari/605.1.1\r\nConnection: close\r\nAccept: */*\r\nAccept-Language: en\r\nAccept-Encoding: gzip\r\n\r\n","response":"HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 8\r\nAccess-Control-Allow-Headers: *\r\nAccess-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS\r\nAccess-Control-Allow-Origin: *\r\nAllow: GET,HEAD\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 28 Oct 2025 11:12:58 GMT\r\nEtag: W/\"8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg\"\r\nX-Powered-By: Express\r\n\r\nGET,HEAD","ip":"127.0.0.1","timestamp":"2025-10-28T12:12:58.50567+01:00","curl-command":"curl -X 'OPTIONS' -d '' -H 'Accept: */*' -H 'Accept-Language: en' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/18.1.1 Safari/605.1.1' 'http://localhost:3000/'","matcher-status":true},{"template-id":"caa-fingerprint","template-path":"/Users/naimaouaichia/nuclei-templates/dns/caa-fingerprint.yaml","template-encoded":"aWQ6IGNhYS1maW5nZXJwcmludAoKaW5mbzoKICBuYW1lOiBDQUEgUmVjb3JkCiAgYXV0aG9yOiBwZHRlYW0KICBzZXZlcml0eTogaW5mbwogIGRlc2NyaXB0aW9uOiBBIENBQSByZWNvcmQgd2FzIGRpc2NvdmVyZWQuIEEgQ0FBIHJlY29yZCBpcyB1c2VkIHRvIHNwZWNpZnkgd2hpY2ggY2VydGlmaWNhdGUgYXV0aG9yaXRpZXMgKENBcykgYXJlIGFsbG93ZWQgdG8gaXNzdWUgY2VydGlmaWNhdGVzIGZvciBhIGRvbWFpbi4KICByZWZlcmVuY2U6CiAgICAtIGh0dHBzOi8vc3VwcG9ydC5kbnNpbXBsZS5jb20vYXJ0aWNsZXMvY2FhLXJlY29yZC8jd2hhdHMtYS1jYWEtcmVjb3JkCiAgY2xhc3NpZmljYXRpb246CiAgICBjd2UtaWQ6IENXRS0yMDAKICBtZXRhZGF0YToKICAgIG1heC1yZXF1ZXN0OiAxCiAgdGFnczogZG5zLGNhYSxkaXNjb3ZlcnkKCmRuczoKICAtIG5hbWU6ICJ7e0ZRRE59fSIKICAgIHR5cGU6IENBQQogICAgbWF0Y2hlcnM6CiAgICAgIC0gdHlwZTogcmVnZXgKICAgICAgICByZWdleDoKICAgICAgICAgIC0gIklOXFxzK0NBQVxccysoLispIgoKICAgIGV4dHJhY3RvcnM6CiAgICAgIC0gdHlwZTogcmVnZXgKICAgICAgICBncm91cDogMQogICAgICAgIHJlZ2V4OgogICAgICAgICAgLSAnaXNzdWUgIiguKikiJwogICAgICAgICAgLSAnaXNzdWV3aWxkICIoLiopIicKICAgICAgICAgIC0gJ2lvZGVmICIoLiopIicKIyBkaWdlc3Q6IDQ5MGEwMDQ2MzA0NDAyMjAxNzA1YTMwODFlNmZmNzljMjA5NGM3NzgyMGQ5OGY0ODgyYWE5N2NhODQxZDdkZWViNDFlNWE3MGE4NDZhZDhlMDIyMDJjODU4YjcwMzdjM2QyNjdhZGQ3YjE0Yzk5OTMwODhlYTZkN2Y1ZTNiNjQ5MjZlNTgwZGU4ODFmOTBjZTNiNDg6OTIyYzY0NTkwMjIyNzk4YmI3NjFkNWI2ZDhlNzI5NTA=","info":{"name":"CAA Record","author":["pdteam"],"tags":["dns","caa","discovery"],"description":"A CAA record was discovered. A CAA record is used to specify which certificate authorities (CAs) are allowed to issue certificates for a domain.","reference":["https://support.dnsimple.com/articles/caa-record/#whats-a-caa-record"],"severity":"info","metadata":{"max-request":1},"classification":{"cve-id":null,"cwe-id":["cwe-200"]}},"type":"dns","host":"localhost","matched-at":"localhost","request":";; opcode: QUERY, status: NOERROR, id: 34537\n;; flags: rd; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags:; udp: 4096\n\n;; QUESTION SECTION:\n;localhost.\tIN\t CAA\n","response":";; opcode: QUERY, status: NXDOMAIN, id: 34537\n;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version 0; flags:; udp: 512\n\n;; QUESTION SECTION:\n;localhost.\tIN\t CAA\n\n;; AUTHORITY SECTION:\n.\t86349\tIN\tSOA\ta.root-servers.net. nstld.verisign-grs.com. 2025102800 1800 900 604800 86400\n","timestamp":"2025-10-28T12:13:03.550181+01:00","matcher-status":true}]